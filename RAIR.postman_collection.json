{
	"info": {
		"_postman_id": "e77fbe16-ec16-4912-a9d6-5b6c20f8a53b",
		"name": "RAIR",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response Code is 200\", () => {",
									"    pm.response.to.have.status(200)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"adminNFT\": \"0x88B48F654c30e99bc2e4A1559b4Dcf1aD93FA656\",\n    \"publicAddress\": \"0x67B99531A2ab44F5c71474BD54d07FE78D7C5516\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response Code is 200\", () => {",
									"    pm.response.to.have.status(200)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/users/{{public_key1}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"{{public_key1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response Code is 200\", () => {",
									"    pm.response.to.have.status(200)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"adminNFT\": \"0x495f947276749Ce646f68AC8c248420045cb7b5e:1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/users/{{public_key1}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"{{public_key1}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Request Auth Challenge",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let messageString = pm.response.json().response",
									"postman.setEnvironmentVariable(\"challenge\", messageString.split('\"')[37])",
									"pm.test(\"Response Code is 200\", () => {",
									"    pm.response.to.have.status(200)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/auth/get_challenge/{{public_key1}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"auth",
								"get_challenge",
								"{{public_key1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Token",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/auth/get_token/{{challenge}}/0x77d6c662d8162506a66a5a0fa4f6d4145e2b1e67dbf9c8c031c3ca9cd12fd2305a127291b74b2d443b66f5f831eb85956081d170e6160ef36b0cb8b53c7a61831b",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"auth",
								"get_token",
								"{{challenge}}",
								"0x77d6c662d8162506a66a5a0fa4f6d4145e2b1e67dbf9c8c031c3ca9cd12fd2305a127291b74b2d443b66f5f831eb85956081d170e6160ef36b0cb8b53c7a61831b"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify admin user",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-rair-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJldGhfYWRkciI6IjB4NjdiOTk1MzFhMmFiNDRmNWM3MTQ3NGJkNTRkMDdmZTc4ZDdjNTUxNiIsImFkbWluUmlnaHRzIjpmYWxzZSwiaWF0IjoxNjMxMzU5NzAzLCJleHAiOjE2MzE0NDYxMDN9.jFGkRyq2eQI8geiuITIZxmaL4LHvn-MC_wPrzCheVCc",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/auth/admin/{{challenge}}/0x59c3783dbf99ba60245e3603bc66326325cddbb89262464ea499b5b325d633ba4a058432269ca129d60cfbfb5cd7aa3c4d1a451455bb9759e2f8622b706bb33d1c",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"auth",
								"admin",
								"{{challenge}}",
								"0x59c3783dbf99ba60245e3603bc66326325cddbb89262464ea499b5b325d633ba4a058432269ca129d60cfbfb5cd7aa3c4d1a451455bb9759e2f8622b706bb33d1c"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify user signature",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-rair-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJldGhfYWRkciI6IjB4NjdiOTk1MzFhMmFiNDRmNWM3MTQ3NGJkNTRkMDdmZTc4ZDdjNTUxNiIsImFkbWluUmlnaHRzIjpmYWxzZSwiaWF0IjoxNjMxMzU5NzAzLCJleHAiOjE2MzE0NDYxMDN9.jFGkRyq2eQI8geiuITIZxmaL4LHvn-MC_wPrzCheVCc",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"publicAddress\": \"0x67B99531A2ab44F5c71474BD54d07FE78D7C5516\",\n    \"signature\": \"fcac02a72e019e3a6ff8ba151caf5a788a7d6d6531ba3a7d57da34f214147529\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/auth/authentication",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"auth",
								"authentication"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user details by JWT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response Code is 200\", () => {",
									"    pm.response.to.have.status(200)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-rair-token",
								"value": "{{JWT}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/auth/user_info",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"auth",
								"user_info"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Media",
			"item": [
				{
					"name": "Get All Media",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-rair-token",
								"value": "{{JWT}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/api/media/list",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"media",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register Media",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-rair-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJldGhfYWRkciI6IjB4NjdiOTk1MzFhMmFiNDRmNWM3MTQ3NGJkNTRkMDdmZTc4ZDdjNTUxNiIsImFkbWluUmlnaHRzIjpmYWxzZSwiaWF0IjoxNjMxMzU5NzAzLCJleHAiOjE2MzE0NDYxMDN9.jFGkRyq2eQI8geiuITIZxmaL4LHvn-MC_wPrzCheVCc",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/media/add/{{IPFS_CID1}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"media",
								"add",
								"{{IPFS_CID1}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Contracts",
			"item": [
				{
					"name": "Get Contracts list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"postman.setEnvironmentVariable(\"contract_address\", pm.response.json().contracts[1].contractAddress)",
									"pm.test(\"Response Code is 200\", () => {",
									"    pm.response.to.have.status(200)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-rair-token",
								"value": "{{JWT}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/contracts",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"contracts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Contract details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response Code is 200\", () => {",
									"    pm.response.to.have.status(200)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-rair-token",
								"value": "{{JWT}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/contracts/{{contract_address}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"contracts",
								"{{contract_address}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Contract details - Invalid Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response Code is 500\", () => {",
									"    pm.response.to.have.status(500)",
									"})",
									"",
									"pm.test(\"Response Message\", () => {",
									"    pm.expect(pm.response.json().message).to.equal(\"jwt malformed\")",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-rair-token",
								"value": "{{JWT-Invalid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/contracts/{{contract_address}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"contracts",
								"{{contract_address}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Contract details - Token Not Provided",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response Code is 500\", () => {",
									"    pm.response.to.have.status(500)",
									"})",
									"",
									"pm.test(\"Response Message\", () => {",
									"    pm.expect(pm.response.json().message).to.equal(\"jwt must be provided\")",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-rair-token",
								"value": "{{JWT-Invalid}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/contracts/{{contract_address}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"contracts",
								"{{contract_address}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Contract details - Token Expired",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response Code is 500\", () => {",
									"    pm.response.to.have.status(500)",
									"})",
									"",
									"pm.test(\"Response Message\", () => {",
									"    pm.expect(pm.response.json().message).to.equal(\"jwt expired\")",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-rair-token",
								"value": "{{JWT-expired}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/contracts/{{contract_address}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"contracts",
								"{{contract_address}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Product for a contract",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-rair-token",
								"value": "{{JWT}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/contracts/{{contract_address}}/products",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"contracts",
								"{{contract_address}}",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Product and Offers for a User",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-rair-token",
								"value": "{{JWT}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/contracts/{{contract_address}}/products/offers",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"contracts",
								"{{contract_address}}",
								"products",
								"offers"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tokens",
			"item": [
				{
					"name": "Get All Product tokens",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-rair-token",
								"value": "{{JWT}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/nft/{{contract_address}}/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"nft",
								"{{contract_address}}",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get specific token",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-rair-token",
								"value": "{{JWT}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/nft/{{contract_address}}/0/token/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"nft",
								"{{contract_address}}",
								"0",
								"token",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get specific token by contract and unique ID",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-rair-token",
								"value": "{{JWT}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/nft/{{contract_address}}/token/19",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"nft",
								"{{contract_address}}",
								"token",
								"19"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get files by NFT",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-rair-token",
								"value": "{{JWT}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/nft/{{contract_address}}/1/files/100",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"nft",
								"{{contract_address}}",
								"1",
								"files",
								"100"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bulk Create NFT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response Code is 200\", () => {",
									"    pm.response.to.have.status(200)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-rair-token",
								"value": "{{JWT}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "csv",
									"type": "file",
									"src": "marilyn-metadata1.csv"
								},
								{
									"key": "contract",
									"value": "{{contract_address}}",
									"type": "text"
								},
								{
									"key": "product",
									"value": "2",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/nft",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"nft"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}